(window.webpackJsonpShineoutDoc=window.webpackJsonpShineoutDoc||[]).push([[47],{1330:function(e,n,t){"use strict";var a=t(51),r=t(21),o=t(4),i=t(5),l=t(8),s=t(2),c=t(7),u=t(1),d=t(0),v=t.n(d),m=t(14),b=t.n(m),g=t(27),p=t(19),f=t(37),h=t(16),j=t(11);var y=function(e){var n=e.url,t=e.name,a=(e.cors,e.file),r=e.onProgress,o=e.onLoad,i=e.onError,l=e.withCredentials,s=e.params,c=void 0===s?{}:s,u=e.headers,d=void 0===u?{}:u,m=e.onStart;if(n){var p=new FormData;Object.keys(c).forEach(function(e){p.append(e,c[e])}),p.append(t,a);var f,h,v,b=(f="post",h=n,"withCredentials"in(v=new XMLHttpRequest)?v.open(f,h,!0):"undefined"!=typeof XDomainRequest?(v=new XDomainRequest).open(f,h):v=null,v);return b.withCredentials=l,r&&b.upload.addEventListener("progress",r,!1),b.onload=function(e){return o(e.currentTarget)},b.onerror=i,Object.keys(d).forEach(function(e){b.setRequestHeader(e,d[e])}),m&&m(a),b.send(p),b}console.error(new Error("action is required, but its value is ".concat(n)))},E={display:"none"},O=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).locked=!1,n.bindElement=n.bindElement.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"bindElement",value:function(e){this.input=e}},{key:"click",value:function(){var e=this;this.locked||(this.locked=!0,this.input.value="",this.input.click(),setTimeout(function(){e.locked=!1},1e3))}},{key:"render",value:function(){var e=this.props,n=e.accept,t=e.onChange,a=e.multiple;return v.a.createElement("input",{ref:this.bindElement,accept:n,multiple:a,onChange:t,style:E,type:"file"})}}]),t}(d.PureComponent),w=t(257),x=t(67),R=t(65),k=v.a.createElement("span",{style:{display:"inline-block",marginRight:8}},v.a.createElement(x.a,{size:10,name:"ring"})),S=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).handleRemove=n.handleRemove.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"handleRemove",value:function(){this.props.onRemove(this.props.id)}},{key:"render",value:function(){var e=this.props,n=e.message,t=e.name,a=e.status,r=e.process,o=Object(j.E)("view-file",3===a&&"error");return v.a.createElement("div",{className:o},v.a.createElement("div",{className:Object(j.E)("text")},1===a&&k," ",t," ",n&&v.a.createElement("span",null,"(",n,")")),v.a.createElement("a",{href:"javascript:;",className:Object(j.E)("delete"),onClick:this.handleRemove},R.a.Close),3!==a&&v.a.createElement(w.a,{className:Object(j.E)("progress"),background:0<=r?"#e9ecef":"transparent",value:r,strokeWidth:2}))}}]),t}(d.PureComponent),U=t(264),A=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).handleRemove=n.handleRemove.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"handleRemove",value:function(){this.props.onRemove(this.props.id)}},{key:"render",value:function(){var e=this.props,n=e.process,t=e.status,a=e.style,r=e.data,o=e.message,i=Object(j.E)("image-item",3===t&&"error");return v.a.createElement("div",{style:a,className:i},r&&v.a.createElement(U.a,{src:r,fit:"center",width:"auto",height:0,className:Object(j.E)("image-bg")}),o&&v.a.createElement("div",{className:Object(j.E)("message")},o),v.a.createElement("a",{className:Object(j.E)("delete"),onClick:this.handleRemove,href:"javascript:;"},R.a.Close),v.a.createElement("div",{className:Object(j.E)("progress-bg")},v.a.createElement(w.a,{className:Object(j.E)("progress"),color:"#f2f2f2",background:"rgba(0,0,0,0.5)",value:n,strokeWidth:2})))}}]),t}(d.PureComponent),F=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).handleRemove=n.handleRemove.bind(Object(u.a)(Object(u.a)(n))),n.handleRecover=n.handleRecover.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"handleRemove",value:function(){this.props.onRemove(this.props.index)}},{key:"handleRecover",value:function(){var e=this.props,n=e.onRecover,t=e.value;n(e.index,t)}},{key:"render",value:function(){var e=this.props,n=e.renderResult,t=e.value,a=e.recoverAble,r=e.showRecover,o=Object(j.E)("view-value",a&&"to-be-delete");return v.a.createElement("div",{className:o},v.a.createElement("div",{className:Object(j.E)("text")},n(t)),this.props.onRemove&&v.a.createElement("a",{href:"javascript:;",className:Object(j.E)("delete"),onClick:this.handleRemove},R.a.Close),r&&v.a.createElement("a",{href:"javascript:;",className:Object(j.E)("recover"),onClick:this.handleRecover},R.a.Recovery))}}]),t}(d.PureComponent);F.defaultProps={renderResult:function(e){return e},recoverAble:!1};var B=F,C=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).handleRemove=n.handleRemove.bind(Object(u.a)(Object(u.a)(n))),n.handleRecover=n.handleRecover.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"handleRemove",value:function(){this.props.onRemove(this.props.index)}},{key:"handleRecover",value:function(){var e=this.props,n=e.onRecover,t=e.value;n(e.index,t)}},{key:"render",value:function(){var e=this.props,n=e.value,t=e.renderResult,a=e.recoverAble,r=e.style,o=e.showRecover,i=Object(j.E)("image-item","image-result",a&&"to-be-delete"),l=t(n);return v.a.createElement("div",{style:r,className:i},l&&v.a.createElement(U.a,{src:l,href:l,fit:"center",width:"auto",height:0,className:Object(j.E)("image-bg")}),o&&v.a.createElement("a",{href:"javascript:;",className:Object(j.E)("recover"),onClick:this.handleRecover},R.a.Recovery),this.props.onRemove&&v.a.createElement("a",{href:"javascript:;",className:Object(j.E)("delete"),onClick:this.handleRemove},R.a.Close))}}]),t}(d.PureComponent);C.defaultProps={renderResult:function(e){return e}};var I=C,N=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).state={files:{},recycle:[]},n.addFile=n.addFile.bind(Object(u.a)(Object(u.a)(n))),n.bindElement=n.bindElement.bind(Object(u.a)(Object(u.a)(n))),n.handleAddClick=n.handleAddClick.bind(Object(u.a)(Object(u.a)(n))),n.removeFile=n.removeFile.bind(Object(u.a)(Object(u.a)(n))),n.removeValue=n.removeValue.bind(Object(u.a)(Object(u.a)(n))),n.recoverValue=n.recoverValue.bind(Object(u.a)(Object(u.a)(n))),e.validateHook(n.validate.bind(Object(u.a)(Object(u.a)(n)))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"getAction",value:function(e){var n=this.props.action;return"string"==typeof n?n:"function"==typeof n?n(e):""}},{key:"bindElement",value:function(e){this.input=e}},{key:"handleAddClick",value:function(){this.input.click()}},{key:"validate",value:function(){var t=this.state.files;return new Promise(function(e,n){0<Object.keys(t).length&&n(new h.a("")),e(!0)})}},{key:"removeFile",value:function(n){var e=this.state.files[n];e&&(e.xhr&&e.xhr.abort&&e.xhr.abort(),this.setState(Object(g.a)(function(e){delete e.files[n]})))}},{key:"removeValue",value:function(n){var t=this,a=this.props.recoverAble;this.setState(Object(g.a)(function(e){e.recycle.push(t.props.value[n]),"number"==typeof a&&e.recycle.length>a&&e.recycle.shift()}));var e=Object(g.a)(this.props.value,function(e){e.splice(n,1)});this.props.onChange(e)}},{key:"recoverValue",value:function(n,t){this.props.onChange(Object(g.a)(this.props.value,function(e){e.push(t)})),this.setState(Object(g.a)(function(e){e.recycle.splice(n,1)}))}},{key:"addFile",value:function(e){var l=this,s=e.target,n=this.props,c=n.beforeUpload,u=n.validator,d=Object(r.a)({},this.state.files);Array.from({length:s.files.length}).forEach(function(e,n){var t=s.files[n],a=Object(f.b)(),r={name:t.name,process:-1,status:1,blob:t};d[a]=r;var o=null;if("function"==typeof u.size&&(o=u.size(t.size)),"function"==typeof u.ext){var i=t.name.split(".");o=u.ext(i[i.length-1])}if(o instanceof Error)return r.message=o.message,r.status=3,void(c&&c(t).then(function(n){l.setState(Object(g.a)(function(e){e.files[a]=Object.assign({},e.files[a],n)}))}));c?c(t).then(function(n){3!==n.status&&(d[a].xhr=l.uploadFile(a,t,n.data)),l.setState(Object(g.a)(function(e){e.files[a]=Object.assign({},e.files[a],n)}))}):d[a].xhr=l.uploadFile(a,t)}),this.setState({files:d})}},{key:"uploadFile",value:function(a,r,o){var i=this,e=this.props,l=e.onSuccess,n=e.name,t=e.htmlName,s=e.cors,c=e.params,u=e.withCredentials,d=e.headers,m=e.request,p=e.onProgress,f=e.onStart,h=m||y,v=!1,b={url:this.getAction(r),name:t||n,cors:s,params:c,withCredentials:u,file:r,headers:d,onStart:f,onProgress:function(e,n){var t="number"==typeof e.percent?e.percent:e.loaded/e.total*100;v||(v=!0,setTimeout(function(){v=!1},16),i.state.files[a]&&i.setState(Object(g.a)(function(e){e.files[a].process=t,n&&(e.files[a].message=n)}),function(){"function"==typeof p&&p(i.state.files[a])}))},onLoad:function(e){if(/^2|1223/.test(e.status)){var n=e.responseText||e.response;if(l&&(n=l(n,r,o)),n instanceof Error)i.setState(Object(g.a)(function(e){e.files[a].status=3,e.files[a].name=r.name,e.files[a].message=n.message}));else{i.setState(Object(g.a)(function(e){delete e.files[a]}));var t=Object(g.a)(i.props.value,function(e){e.push(n)});i.props.onChange(t)}}else i.handleError(a,e)},onError:function(e){return i.handleError(a,e)}};return!1!==p&&null!==p||delete b.onProgress,h(b)}},{key:"handleError",value:function(n,e){var t=this.props.onError,a=e.statusText;t&&(a=t(e)),this.setState(Object(g.a)(function(e){e.files[n].status=3,e.files[n].message=a}))}},{key:"renderHandle",value:function(){var e=this.props,n=e.limit,t=e.value,a=e.children,r=e.accept,o=e.multiple,i=t.length+Object.keys(this.state.files).length;return 0<n&&n<=i?null:v.a.createElement("span",{className:Object(j.E)("handle"),onClick:this.handleAddClick},a,v.a.createElement(O,{accept:r,ref:this.bindElement,multiple:o,onChange:this.addFile}))}},{key:"render",value:function(){var t=this,e=this.props,a=e.limit,r=e.value,o=e.renderResult,n=e.style,i=e.imageStyle,l=e.recoverAble,s=e.showUploadList,c=e.customResult,u=this.state,d=u.files,m=u.recycle,p=b()(Object(j.E)("_"),this.props.className),f=i?A:S,h=i?I:B;return c?v.a.createElement("div",{className:p,style:n},this.renderHandle(),v.a.createElement(c,{value:r,files:d,onValueRemove:this.removeValue,onFileRemove:this.removeFile})):v.a.createElement("div",{className:p,style:n},!i&&this.renderHandle(),s&&r.map(function(e,n){return v.a.createElement(h,{key:n,value:e,index:n,style:i,renderResult:o,onRemove:t.removeValue})}),s&&Object.keys(d).map(function(e){return v.a.createElement(f,Object.assign({},d[e],{key:e,id:e,style:i,onRemove:t.removeFile}))}),i&&this.renderHandle(),l&&m.map(function(e,n){return v.a.createElement(h,{key:n,value:e,index:n,renderResult:o,recoverAble:!!l,showRecover:l&&a>r.length,onRecover:t.recoverValue,style:i})}))}}]),t}(p.b);N.defaultProps={cors:!1,limit:100,recoverAble:!1,validator:{},value:[],withCredentials:!1,showUploadList:!0};var z=N,P=t(12),T=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).beforeUpload=n.beforeUpload.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"beforeUpload",value:function(n){var t=this;return new Promise(function(a){var r=t.props.validator.imageSize,o={},e=new FileReader;e.onload=function(e){var n=e.target.result;if(o.data=n,r){var t=new window.Image;t.onload=function(){var e=r(t);e instanceof Error&&(o.status=3,o.message=e.message),a(o)},t.src=n}else a(o)},e.readAsDataURL(n)})}},{key:"render",value:function(){var e=this.props,n=e.children,t=e.width,a=e.height,r=Object(P.a)(e,["children","width","height"]),o={width:t,height:a},i=n||v.a.createElement("div",{className:Object(j.E)("indicator")});return v.a.createElement(z,Object.assign({},r,{imageStyle:o,beforeUpload:this.beforeUpload}),v.a.createElement("div",{style:o,className:Object(j.E)("image-plus","image-item")},i))}}]),t}(d.PureComponent);T.defaultProps={accept:"image/*",height:80,validator:{},width:80};var q=T,V=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).state={progress:-1},n.handleError=n.handleError.bind(Object(u.a)(Object(u.a)(n))),n.handleSuccess=n.handleSuccess.bind(Object(u.a)(Object(u.a)(n))),n.handleProgress=n.handleProgress.bind(Object(u.a)(Object(u.a)(n))),n.handleStart=n.handleChange.bind(Object(u.a)(Object(u.a)(n)),0),n.handleOver=n.handleChange.bind(Object(u.a)(Object(u.a)(n)),-1),n.handleUpload=n.handleUpload.bind(Object(u.a)(Object(u.a)(n))),n}return Object(c.a)(t,e),Object(i.a)(t,[{key:"handleChange",value:function(e){this.setState({progress:e})}},{key:"handleProgress",value:function(e){this.handleChange(e.process)}},{key:"handleError",value:function(e){var n=this.props.onError;n&&n(e),this.handleOver()}},{key:"handleSuccess",value:function(){var e=this.props.onSuccess;e&&e.apply(void 0,arguments),this.handleOver()}},{key:"handleUpload",value:function(e){0<=this.state.progress&&e.stopPropagation()}},{key:"renderLoadingView",value:function(e){var n,t=this.props,a=t.placeholder,r=t.loading;return Object(d.isValidElement)(r)?v.a.createElement("span",null,r):v.a.createElement("span",null,(n=e,v.a.createElement("span",{style:{display:"inline-block",marginRight:8}},v.a.createElement(x.a,{size:10,name:"ring",color:n}))),"string"==typeof r?r:a)}},{key:"render",value:function(){var e=this.props,n=e.placeholder,t=e.type,a=Object(P.a)(e,["placeholder","type"]),r=0<=this.state.progress,o=b()(Object(j.E)("bprogress"),this.props.className,r?Object(j.E)("uploading","border-".concat(t)):Object(j.E)("bprogress-".concat(t))),i={right:r?"".concat(100-this.state.progress,"%"):"100%"};return v.a.createElement(z,Object.assign({},a,{onProgress:this.handleProgress,onStart:this.handleStart,showUploadList:!1,onError:this.handleError,onSuccess:this.handleSuccess}),v.a.createElement("div",{className:o,onClick:this.handleUpload},r&&v.a.createElement("div",{style:i,className:Object(j.E)("bprogress-".concat(t),"stream")},this.renderLoadingView("#fff")),v.a.createElement("span",null,r?this.renderLoadingView():n)))}}]),t}(p.b);V.defaultProps={type:"primary"};var L=V,D=Object(a.a)(z);D.Image=Object(a.a)(q),D.Button=Object(a.a)(L),D.displayName="ShineoutUpload",D.Image.displayName="ShineoutImageUpload";n.a=D},257:function(e,n,t){"use strict";var a=t(0),f=t.n(a),r=t(14),h=t.n(r),v=t(11);function o(e){var n=e.children,t=e.strokeWidth,a=e.type,r=e.value,o=e.color,i=e.style,l=e.background,s=h()(Object(v.u)("line",a),e.className),c={background:o,backgroundSize:"1em 1em",width:"".concat(r/100*100,"%"),borderRadius:t/2};return f.a.createElement("div",{className:s,style:i},f.a.createElement("div",{className:Object(v.u)("background"),style:{height:t,background:l,borderRadius:t/2}},f.a.createElement("div",{className:Object(v.u)("front"),style:c})),void 0!==n&&f.a.createElement("div",{className:Object(v.u)("content")},n))}o.defaultProps={strokeWidth:8};var i=o;function l(e){var n=e.children,t=e.strokeWidth,a=e.type,r=e.color,o=e.size,i=e.value,l=e.background,s=e.strokeLinecap,c=h()(Object(v.u)("circle",a),e.className),u=100-Math.ceil(2*t/o*100),d=2*Math.PI*u,m=[d*(i/100),d*(1-i/100)],p=Object.assign({width:o,height:o},e.style);return f.a.createElement("div",{className:c,style:p},f.a.createElement("svg",{viewBox:"0 0 200 200"},f.a.createElement("circle",{className:Object(v.u)("background"),cx:"100",cy:"100",r:u,strokeWidth:2*t,fill:"transparent",style:{stroke:l}}),0<i&&f.a.createElement("circle",{className:Object(v.u)("front"),cx:"100",cy:"100",r:u,fill:"transparent",style:{stroke:r},strokeDasharray:m,strokeLinecap:s,strokeWidth:2*t})),n&&f.a.createElement("div",{className:Object(v.u)("content")},n))}l.defaultProps={strokeLinecap:"round",strokeWidth:8,size:100};var s=l;function c(e){switch(e.shape){case"circle":return f.a.createElement(s,e);default:return f.a.createElement(i,e)}}c.defaultProps={shape:"line"},c.displayName="ShineoutProgress";n.a=c},969:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(214),i=t(215),l=t(20),s=t(970),c=t.n(s),u=t(971),d=t.n(u),m=Object(l.b)(c.a,d.a),p=[{name:"01-base",title:Object(l.b)("基本用法 \n 基础的文件上传","Base \n Basic usage for uploading file"),component:t(972).default,rawText:t(973)},{name:"02-image",title:Object(l.b)("上传图片 \n 使用 Upload.Image 处理带预览的图片上传","Image \n Use Upload.Image to upload and preview images."),component:t(974).default,rawText:t(975)},{name:"03-button",title:Object(l.b)("按钮上传 \n 使用 Upload.Button 展示单个文件的上传进度","Button \n Use Upload.Button to show the upload progress of individual files"),component:t(976).default,rawText:t(977)},{name:"04-validator",title:Object(l.b)("校验 \n 通过 validator.imageSize 校验图片长宽，本例为 200px * 100px","Validator \n Set validator.imageSize to validate the width and height of the image."),component:t(978).default,rawText:t(979)},{name:"05-filesize",title:Object(l.b)("文件大小 \n 文件大小校验，本例为 10KB"," \n Set validator.size to validate the size of the file. This example is 10KB."),component:t(980).default,rawText:t(981)},{name:"06-error",title:Object(l.b)("异常处理 \n onError 用来处理上传到服务器返回的异常","Error \n Set onError to handle exceptions returned by uploading to the server."),component:t(982).default,rawText:t(983)},{name:"07-recover",title:Object(l.b)("恢复删除 \n 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复","Recover \n Set reconverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted."),component:t(984).default,rawText:t(985)},{name:"08-request",title:Object(l.b)("自定义上传 \n 通过 request 函数，替代默认上传方法","Custom Request \n Set request property to use your own XMLHttpRequest."),component:t(986).default,rawText:t(987)},{name:"09-zip",title:Object(l.b)(" \n 此事例演示通过自定义函数压缩文件后上传"," \n Zip file and upload."),component:t(988).default,rawText:t(989)},{name:"10-defaultValue",title:Object(l.b)("默认值 \n 默认值示例","defaultValue \n defaultValue example"),component:t(990).default,rawText:t(991)}];n.default=Object(o.a)(function(e){return r.a.createElement(i.b,Object.assign({},e,{codes:void 0,source:m,examples:p}))})},970:function(e,n){e.exports="# Upload\n\n<br />\n\n本页中的示例服务端限制为 10 KB，大于此限制的文件会上传失败\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| accept | string | 无 | 上传文件类型 |\n| action | string | 必填 | 上传地址 |\n| children | any | 必填 | 上传占位内容 |\n| className | string | 无 | 扩展className |\n| defaultValue | array | 无 | 默认值 |\n| headers | object | 无 | 请求头部信息 |\n| htmlName | string | 无 | 服务端接收的 filename，不填使用 name |\n| limit | number | 100 | 最大上传文件数 |\n| name | string | 无 | Form 内存取数据的 key |\n| onChange | func(values) | 无 | 值改变回调(上传成功，删除)<br />values: 数组 |\n| onSuccess | func(res, file):value | 无 | 上传成功回调，返回结果作为新的 value<br />res: 上传接口返回结果<br />file: 选择的文件 |\n| onError | func(xhr):string | 无 | 上传失败时回调，返回结果作为错误内容提示 |\n| params | object | 无 | 提交到服务端的额外参数 |\n| recoverAble | bool | false | 是否可以恢复已删除的value |\n| renderResult | func | a => a | 结果展示 |\n| validator | object | 无 | 上传前文件校验 |\n| value | array | \\[] | defaultValue 和 value 可以同时设置，defaultValue 会被value覆盖<br />在Form中，value会被表单接管，value无效 |\n| withCredentials | bool | false | 是否携带 cookie |\n| multiple | bool | false | 是否支持多选文件 |\n\n\n### Image\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| children | any | 无 | 上传按钮内容，可为空 |\n| renderResult | func | a => a | 返回图片 url 链接地址 |\n\n\n### validator 属性\n\n| 属性 | 类型 | 说明 |\n| --- | --- | --- |\n| ext | func(string):Error | 判断后缀名，传入参数为文件后缀，校验失败返回 Error |\n| size | func(number):Error | 判断文件大小，校验失败返回 Error |\n| imageSize | func(Image):Error | 只对 Image 有效，判断图片尺寸，校验失败返回 Error |\n\n### Button\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| type | string | primary | 可选值为，\\['primary', success', 'info', 'warning', 'danger'\\] |\n| placeholder | string \\| ReactElement | 无 | 按钮默认内容 |\n| loading | string \\| ReactElement | 无 | 上传中按钮的内容，如果是字符串默认会有spin loading |\n"},971:function(e,n){e.exports="# Upload\n\n<example />\n\n## API\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| accept | string | none | The type of the upload file |\n| action | string | required | The address for uploading |\n| children | any | required | Upload placeholder |\n| className | string | none | Extend className |\n| headers | object | none | Request headers |\n| htmlName | string | none | The filename received by the server. If it is not filled in, use the name. |\n| limit | number | 100 | Maximum number of uploaded files |\n| name | string | none | The key access data in the Form  |\n| onChange | func(values) | none | The callback function when the value is changing(Upload successfully, delete)<br />values: Array |\n| onSuccess | func(res, file):value | none | The callback function when to upload successfully. The returned result is as the new value. <br />res: the result that the upload interface returns<br />file: selected file |\n| onError | func(xhr):string | none | The callback function when to upload unsuccessfully. The returned result is as the error message. |\n| params | object | none | Additional parameters submitted to the server |\n| recoverAble | bool | true | Whether to recover deleted values. |\n| renderResult | func | a => a | Display results |\n| request | func | - | Custom request method |\n| validator | object | none | Check file before uploading |\n| value | array | \\[] | value |\n| withCredentials | bool | false | Whether to take the cookie |\n| multiple | bool | false | Whether multi-select files are supported |\n\n### Image\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| children | any | none | The content of the upload button. It can be empty. |\n| renderResult | func | a => a | Return the link address of the url of the image.|\n\n\n### Validator\n\n| Property | Type | Description |\n| --- | --- | --- |\n| ext | func(string):Error | Judge the file extension, return the Error when the verification fails. |\n| size | func(number):Error | Judge the size of the file and return the Error when the verification fails. |\n| imageSize | func(Image):Error | It is only valid for Image to determine the size of images and return the Error when the verification fails. |\n\n### Button\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| type | string | primary | options: \\['primary', success', 'info', 'warning', 'danger'\\] |\n| placeholder | string \\| ReactElement | none | button default content |\n| loading | string \\| ReactElement | none | content of uploading, will have spin if a string |\n"},972:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73);n.default=function(){return r.a.createElement(o.a,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",name:"file",onSuccess:function(e,n){return n.name},limit:3,style:{width:300},onStart:function(e){return console.log(e)}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file"))}},973:function(e,n){e.exports='/**\n * cn - 基本用法\n *    -- 基础的文件上传\n * en - Base\n *    -- Basic usage for uploading file\n\n */\nimport React from \'react\'\nimport { Upload, Button } from \'shineout\'\nimport FontAwesome from \'../Icon/FontAwesome\'\n\nexport default function() {\n  return (\n    <Upload\n      action="//jsonplaceholder.typicode.com/posts"\n      accept="image/*"\n      name="file"\n      onSuccess={(res, file) => file.name}\n      limit={3}\n      style={{ width: 300 }}\n      onStart={f => console.log(f)}\n    >\n      <Button>\n        <FontAwesome name="upload" /> Upload file\n      </Button>\n    </Upload>\n  )\n}\n'},974:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330);n.default=function(){return r.a.createElement(o.a.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},renderResult:function(e){return e.data},limit:3,onStart:function(e){return console.log(e)}})}},975:function(e,n){e.exports='/**\n * cn - 上传图片\n *    -- 使用 Upload.Image 处理带预览的图片上传\n * en - Image\n *    -- Use Upload.Image to upload and preview images.\n */\nimport React from \'react\'\nimport { Upload } from \'shineout\'\n\nexport default function() {\n  return (\n    <Upload.Image\n      action="//jsonplaceholder.typicode.com/posts"\n      accept="image/*"\n      name="file"\n      onSuccess={(res, file, data) => ({ data })}\n      renderResult={f => f.data}\n      limit={3}\n      onStart={f => console.log(f)}\n    />\n  )\n}\n'},976:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330);n.default=function(){return r.a.createElement(o.a.Button,{action:"//jsonplaceholder.typicode.com/posts",name:"file",onSuccess:function(e,n){return n.name},loading:"正在上传...",placeholder:"点击上传",type:"primary"})}},977:function(e,n){e.exports='/**\n * cn - 按钮上传\n *    -- 使用 Upload.Button 展示单个文件的上传进度\n * en - Button\n *    -- Use Upload.Button to show the upload progress of individual files\n */\nimport React from \'react\'\nimport { Upload } from \'shineout\'\n\nexport default function() {\n  return (\n    <Upload.Button\n      action="//jsonplaceholder.typicode.com/posts"\n      name="file"\n      onSuccess={(res, file) => file.name}\n      loading="正在上传..."\n      placeholder="点击上传"\n      type="primary"\n    />\n  )\n}\n'},978:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(73);n.default=function(){return r.a.createElement(o.a.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},width:200,height:100,limit:1,renderResult:function(e){return e.data},validator:{ext:function(e){return["jpg","png"].includes(e)?void 0:new Error("File extension must be jpg or png")}}},r.a.createElement("div",{style:{margin:"auto",color:"#999",textAlign:"center"}},r.a.createElement(i.a,{name:"upload"})," Upload Image",r.a.createElement("br",null),"Allow size 200 * 100"))}},979:function(e,n){e.exports="/**\n * cn - 校验\n *    -- 通过 validator.imageSize 校验图片长宽，本例为 200px * 100px\n * en - Validator\n *    -- Set validator.imageSize to validate the width and height of the image.\n */\nimport React from 'react'\nimport { Upload } from 'shineout'\nimport FontAwesome from '../Icon/FontAwesome'\n\nexport default function() {\n  return (\n    <Upload.Image\n      action=\"//jsonplaceholder.typicode.com/posts\"\n      accept=\"image/*\"\n      name=\"file\"\n      onSuccess={(res, file, data) => ({ data })}\n      width={200}\n      height={100}\n      limit={1}\n      renderResult={f => f.data}\n      validator={{\n        // imageSize: img => ((img.width !== 200 || img.height !== 100) ? new Error('only allow 200px * 100px') : undefined),\n        ext: ext => (['jpg', 'png'].includes(ext) ? undefined : new Error('File extension must be jpg or png')),\n      }}\n    >\n      <div style={{ margin: 'auto', color: '#999', textAlign: 'center' }}>\n        <FontAwesome name=\"upload\" /> Upload Image\n        <br />\n        Allow size 200 * 100\n      </div>\n    </Upload.Image>\n  )\n}\n"},980:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",onSuccess:function(e,n){return n.name},style:{width:300,marginBottom:30},validator:{size:function(e){return 10240<e?new Error("max file size is 10KB"):void 0}}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file")),r.a.createElement(o.a.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",onSuccess:function(e,n,t){return{data:t}},validator:{size:function(e){return 10240<e?new Error("max file size is 10KB"):void 0}},renderResult:function(e){return e.data}}))}},981:function(e,n){e.exports='/**\n * cn - 文件大小\n *    -- 文件大小校验，本例为 10KB\n * en -\n *    -- Set validator.size to validate the size of the file. This example is 10KB.\n */\nimport React from \'react\'\nimport { Upload, Button } from \'shineout\'\nimport FontAwesome from \'../Icon/FontAwesome\'\n\nexport default function() {\n  return (\n    <div>\n      <Upload\n        action="//jsonplaceholder.typicode.com/posts"\n        accept="image/*"\n        multiple\n        name="file"\n        onSuccess={(res, file) => file.name}\n        style={{ width: 300, marginBottom: 30 }}\n        validator={{\n          size: s => (s > 10240 ? new Error(\'max file size is 10KB\') : undefined),\n        }}\n      >\n        <Button>\n          <FontAwesome name="upload" /> Upload file\n        </Button>\n      </Upload>\n\n      <Upload.Image\n        action="//jsonplaceholder.typicode.com/posts"\n        accept="image/*"\n        multiple\n        name="file"\n        onSuccess={(res, file, data) => ({ data })}\n        validator={{\n          size: s => (s > 10240 ? new Error(\'max file size is 10KB\') : undefined),\n        }}\n        renderResult={f => f.data}\n      />\n    </div>\n  )\n}\n'},982:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{action:"/path-no-exist",accept:"image/*",name:"file",onSuccess:function(e,n){return n.name},onError:function(e){return console.log(e),404===e.status?"Url not found.":"Upload Fail."},limit:3,style:{width:300,marginBottom:30}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file")),r.a.createElement(o.a.Image,{action:"/path-no-exist",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},onError:function(e){return console.log(e),404===e.status?"Url not found.":"Upload Fail."},renderResult:function(e){return e.data}}))}},983:function(e,n){e.exports="/**\n * cn - 异常处理\n *    -- onError 用来处理上传到服务器返回的异常\n * en - Error\n *    -- Set onError to handle exceptions returned by uploading to the server.\n */\nimport React from 'react'\nimport { Upload, Button } from 'shineout'\nimport FontAwesome from '../Icon/FontAwesome'\n\nexport default function() {\n  return (\n    <div>\n      <Upload\n        action=\"/path-no-exist\"\n        accept=\"image/*\"\n        name=\"file\"\n        onSuccess={(res, file) => file.name}\n        onError={xhr => {\n          console.log(xhr)\n          if (xhr.status === 404) return 'Url not found.'\n          return 'Upload Fail.'\n        }}\n        limit={3}\n        style={{ width: 300, marginBottom: 30 }}\n      >\n        <Button>\n          <FontAwesome name=\"upload\" /> Upload file\n        </Button>\n      </Upload>\n\n      <Upload.Image\n        action=\"/path-no-exist\"\n        accept=\"image/*\"\n        name=\"file\"\n        onSuccess={(res, file, data) => ({ data })}\n        onError={xhr => {\n          console.log(xhr)\n          if (xhr.status === 404) return 'Url not found.'\n          return 'Upload Fail.'\n        }}\n        renderResult={f => f.data}\n      />\n    </div>\n  )\n}\n"},984:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,limit:2,name:"file",recoverAble:!0,onSuccess:function(e,n){return n.name},style:{width:300,marginBottom:30}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file")),r.a.createElement(o.a.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",limit:1,recoverAble:!0,onSuccess:function(e,n,t){return{data:t}},renderResult:function(e){return e.data}}))}},985:function(e,n){e.exports='/**\n * cn - 恢复删除\n *    -- 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复\n * en - Recover\n *    -- Set reconverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted.\n */\nimport React from \'react\'\nimport { Upload, Button } from \'shineout\'\nimport FontAwesome from \'../Icon/FontAwesome\'\n\nexport default function() {\n  return (\n    <div>\n      <Upload\n        action="//jsonplaceholder.typicode.com/posts"\n        accept="image/*"\n        multiple\n        limit={2}\n        name="file"\n        recoverAble\n        onSuccess={(res, file) => file.name}\n        style={{ width: 300, marginBottom: 30 }}\n      >\n        <Button>\n          <FontAwesome name="upload" /> Upload file\n        </Button>\n      </Upload>\n\n      <Upload.Image\n        action="//jsonplaceholder.typicode.com/posts"\n        accept="image/*"\n        multiple\n        name="file"\n        limit={1}\n        recoverAble\n        onSuccess={(res, file, data) => ({ data })}\n        renderResult={f => f.data}\n      />\n    </div>\n  )\n}\n'},986:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73),s=function(e){var n=e.file,t=e.onLoad,a=e.onError,r=e.onProgress,o=new XMLHttpRequest;o.open("post","//jsonplaceholder.typicode.com/posts");var i=new FormData;return i.append("test",n),o.upload.onprogress=r,o.onload=function(){return t(o)},o.onerror=function(){return a({statusText:"error message"})},o.send(i),o};n.default=function(){return r.a.createElement(o.a,{accept:"image/*",onSuccess:function(e,n){return{name:"upload ".concat(n.name)}},limit:3,style:{width:300},request:s,renderResult:function(e){return e.name}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file"))}},987:function(e,n){e.exports="/**\n * cn - 自定义上传\n *    -- 通过 request 函数，替代默认上传方法\n * en - Custom Request\n *    -- Set request property to use your own XMLHttpRequest.\n */\nimport React from 'react'\nimport { Upload, Button } from 'shineout'\nimport FontAwesome from '../Icon/FontAwesome'\n\nconst request = options => {\n  const { file, onLoad, onError, onProgress } = options\n  const xhr = new XMLHttpRequest()\n  xhr.open('post', '//jsonplaceholder.typicode.com/posts')\n\n  const data = new FormData()\n  data.append('test', file)\n  xhr.upload.onprogress = onProgress\n  xhr.onload = () => onLoad(xhr)\n  xhr.onerror = () => onError({ statusText: 'error message' })\n  xhr.send(data)\n\n  return xhr\n}\n\nexport default function() {\n  return (\n    <Upload\n      accept=\"image/*\"\n      onSuccess={(res, file) => ({ name: `upload ${file.name}` })}\n      limit={3}\n      style={{ width: 300 }}\n      request={request}\n      renderResult={d => d.name}\n    >\n      <Button>\n        <FontAwesome name=\"upload\" /> Upload file\n      </Button>\n    </Upload>\n  )\n}\n"},988:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73),s=function(e){var a=e.file,r=e.onLoad,o=e.onError,i=e.onProgress,l=new XMLHttpRequest;l.open("post","//jsonplaceholder.typicode.com/posts");var n=new window.JSZip;return n.file(a.name,a),n.generateInternalStream({type:"blob"}).accumulate(function(e){i(e,"zipping...")}).then(function(e){var n=new File([e],"".concat(a.name,".zip")),t=new FormData;t.append("file",n),l.upload.onprogress=function(e){return i(e,"sending...")},l.onload=function(){return r(l)},l.onerror=function(){return o({statusText:"error message"})},l.send(t)}),l};n.default=function(){return r.a.createElement(o.a,{onSuccess:function(e,n){return{name:"upload ".concat(n.name)}},limit:3,style:{width:300},request:s,renderResult:function(e){return e.name}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file"))}},989:function(e,n){e.exports="/**\n * cn -\n *    -- 此事例演示通过自定义函数压缩文件后上传\n * en -\n *    -- Zip file and upload.\n */\nimport React from 'react'\nimport { Upload, Button } from 'shineout'\nimport FontAwesome from '../Icon/FontAwesome'\n\nconst request = options => {\n  const { file, onLoad, onError, onProgress } = options\n\n  const xhr = new XMLHttpRequest()\n  xhr.open('post', '//jsonplaceholder.typicode.com/posts')\n\n  const zip = new window.JSZip()\n  zip.file(file.name, file)\n  zip\n    .generateInternalStream({ type: 'blob' })\n    .accumulate(e => {\n      onProgress(e, 'zipping...')\n    })\n    .then(content => {\n      const zipFile = new File([content], `${file.name}.zip`)\n      const data = new FormData()\n      data.append('file', zipFile)\n      xhr.upload.onprogress = m => onProgress(m, 'sending...')\n      xhr.onload = () => onLoad(xhr)\n      xhr.onerror = () => onError({ statusText: 'error message' })\n      xhr.send(data)\n    })\n\n  return xhr\n}\n\nexport default function() {\n  return (\n    <Upload\n      onSuccess={(res, file) => ({ name: `upload ${file.name}` })}\n      limit={3}\n      style={{ width: 300 }}\n      request={request}\n      renderResult={d => d.name}\n    >\n      <Button>\n        <FontAwesome name=\"upload\" /> Upload file\n      </Button>\n    </Upload>\n  )\n}\n"},990:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1330),i=t(80),l=t(73);n.default=function(){var e=[{name:"test file.png",url:"../images/1_s.jpg"}];return r.a.createElement("div",null,r.a.createElement(o.a,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,limit:2,name:"file",onSuccess:function(e,n){return{name:n.name}},style:{width:300,marginBottom:30},defaultValue:e,renderResult:function(e){return e.name}},r.a.createElement(i.a,null,r.a.createElement(l.a,{name:"upload"})," Upload file")),r.a.createElement(o.a.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",limit:1,recoverAble:!0,onSuccess:function(e,n,t){return{url:t}},renderResult:function(e){return e.url},defaultValue:e}))}},991:function(e,n){e.exports='/**\n * cn - 默认值\n *    -- 默认值示例\n * en - defaultValue\n *    -- defaultValue example\n */\nimport React from \'react\'\nimport { Upload, Button } from \'shineout\'\nimport FontAwesome from \'../Icon/FontAwesome\'\n\nexport default function() {\n  const defaultValue = [\n    {\n      name: \'test file.png\',\n      url: \'../images/1_s.jpg\',\n    },\n  ]\n\n  return (\n    <div>\n      <Upload\n        action="//jsonplaceholder.typicode.com/posts"\n        accept="image/*"\n        multiple\n        limit={2}\n        name="file"\n        onSuccess={(res, file) => ({ name: file.name })}\n        style={{ width: 300, marginBottom: 30 }}\n        defaultValue={defaultValue}\n        renderResult={f => f.name}\n      >\n        <Button>\n          <FontAwesome name="upload" /> Upload file\n        </Button>\n      </Upload>\n\n      <Upload.Image\n        action="//jsonplaceholder.typicode.com/posts"\n        accept="image/*"\n        multiple\n        name="file"\n        limit={1}\n        recoverAble\n        onSuccess={(res, file, data) => ({ url: data })}\n        renderResult={f => f.url}\n        defaultValue={defaultValue}\n      />\n    </div>\n  )\n}\n'}}]);